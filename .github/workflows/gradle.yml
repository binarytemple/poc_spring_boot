name: Java CI with Gradle
on:
  push:
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      HELLO: world
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v2
        with:
          java-version: "16"
          distribution: "adopt"
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew test bootJar
  verify-build:
    runs-on: ubuntu-latest
    if: ${{ github.ref != 'refs/heads/master' }}
    needs:
      - test
    steps:
      - uses: actions/checkout@v2
      - name: Build docker image
        shell: bash
        env:
          #SSH_KEY: ${{ secrets.MACHINE_ACCOUNT_SSH_KEY }}
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
        run: |
          eval "$(ssh-agent -s)"
          DOCKER_BUILDKIT=1 docker build  .

  bump-version-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_ID: ghcr.io/binarytemple/poc_spring_boot:${{ github.sha }}
    if: ${{ github.ref == 'refs/heads/master' }}
    needs:
      - verify-build
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Build docker image
        shell: bash
        env:
          RELEASE_VERSION: ${{ steps.tag_version.outputs.new_tag }}
          #           DEPLOY_KEY: ${{ secrets.ESL_DEPLOY_KEY }}
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"
          SHA: ${{ github.sha }}
        run: |
          eval "$(ssh-agent -s)"
          DOCKER_BUILDKIT=1 docker build -t ${{ env.IMAGE_ID }} .
      - name: Publish docker image to GHCR
        shell: bash
        env:
          RELEASE_VERSION: ${{ steps.tag_version.outputs.new_tag }}
        run: |
          docker push ${{ env.IMAGE_ID }}
